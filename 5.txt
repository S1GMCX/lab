#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h> 
#include<random> 
#include<conio.h> 


int main()

{

	int** mat;

	int n, k = 0;

	setlocale(LC_ALL, "Rus");

	printf("Размер матрицы:");

	scanf_s(" %d", &n);



	mat = (int**)malloc(n * sizeof(int*));

	for (int i = 0; i < n; i++) {

		mat[i] = (int*)malloc(n * sizeof(int));

	}

	srand(time(NULL));

	for (int i = 0; i < n; i++) {

		for (int j = 0; j < n; j++) {

			if (i == j) {

				mat[i][j] = 0;

			}

			if (i > j) {

				mat[i][j] = rand() % 2;

				if (mat[i][j] == 0)

					mat[i][j] = mat[i][j];

				else

					mat[i][j] = 1 + rand() % 30;

			}

			mat[j][i] = mat[i][j];

		}

	}

	for (int i = 0; i < n; i++) { //вывод матрицы

		for (int j = 0; j < n; j++) {

			printf(" %4d", mat[i][j]);

		}

		printf("\n"); 

	}

	for (int i = 0; i < n; i++) {  //размер

		for (int j = 0; j < n; j++) {

			if (mat[i][j] != 0) {

				k += 1;

			}

		}

	}

	k = k / 2;

	printf("Размер графа: %d", k);

	printf("\n");

	for (int i = 0; i < n; i++) {

		int isol = 0;

		for (int j = 0; j < n; j++) {

			if (mat[i][j] != 0) {

				isol += 1;

			}

		}

		if (isol == 0)

			printf("\n Вершина %d является изолированной", i + 1);

		else

			printf("\n Вершина %d не является изолированной", i + 1);

	}

	printf("\n");

	for (int i = 0; i < n; i++) {

		int end = 0;

		for (int j = 0; j < n; j++) {

			if (mat[i][j] != 0) {

				end += 1;

			}

		}

		if (end == 1)

			printf("\n Вершина %d является концевой", i + 1);

		else

			printf("\n Вершина %d не является концевой", i + 1);

	}

	printf("\n");

	for (int i = 0; i < n; i++) {

		int dom = 0;

		for (int j = 0; j < n; j++) {

			if (mat[i][j] != 0) {

				dom += 1;

			}

		}

		if (dom == n - 1)

			printf("\n Вершина %d является доминирующей", i + 1);

		else

			printf("\n Вершина %d не является доминирующей", i + 1);

	}

	printf("\n");
}